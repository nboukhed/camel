<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:camel="http://camel.apache.org/schema/blueprint"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd        http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <cxf:cxfEndpoint address="http://127.0.0.1:8088/bank1" id="bank1WS" serviceClass="org.apache.camel.loanbroker.webservice.version.bank.BankWS">
        <cxf:properties>
            <entry key="dataformat" value="POJO"/>
            <entry key="loggingFeatureEnabled" value="true"/>
        </cxf:properties>
    </cxf:cxfEndpoint>
    <cxf:cxfEndpoint address="http://127.0.0.1:8089/bank2" id="bank2WS" serviceClass="org.apache.camel.loanbroker.webservice.version.bank.BankWS">
        <cxf:properties>
            <entry key="dataformat" value="POJO"/>
            <entry key="loggingFeatureEnabled" value="true"/>
        </cxf:properties>
    </cxf:cxfEndpoint>
    <cxf:cxfEndpoint address="http://127.0.0.1:8090/bank3" id="bank3WS" serviceClass="org.apache.camel.loanbroker.webservice.version.bank.BankWS">
        <cxf:properties>
            <entry key="dataformat" value="POJO"/>
            <entry key="loggingFeatureEnabled" value="true"/>
        </cxf:properties>
    </cxf:cxfEndpoint>
    
    <bean class="org.apache.camel.loanbroker.webservice.version.RequestMapper" id="requestMapper"/>
    <bean class="org.apache.camel.loanbroker.webservice.version.ResponseMapper" id="responseMapper"/>
    <bean class="org.apache.camel.loanbroker.webservice.version.BankResponseAggregationStrategy" id="bankResponse"/>
    
    <!-- to setup camel servlet with OSGi HttpService -->
    <reference id="httpService" interface="org.osgi.service.http.HttpService"/>
    <bean
        class="org.apache.camel.component.servlet.osgi.OsgiServletRegisterer"
        destroy-method="unregister"
        id="bean-7070e203-1689-427c-804d-2a76fcc84a18" init-method="register">
        <property name="alias" value="/soap-to-rest/loanBroker"/>
        <property name="httpService" ref="httpService"/>
        <property name="servlet" ref="camelServlet"/>
    </bean>
    <bean
        class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelServlet"/>
    <camelContext id="TetraPackCamelContext" xmlns="http://camel.apache.org/schema/blueprint">
        
		<dataFormats>
  			<json id="toJson" library="Jackson" unmarshalTypeName="org.apache.camel.loanbroker.webservice.version.bank.BankQuote"/>
		</dataFormats>
	
        <restConfiguration 
        	apiContextListing="true"
            apiContextPath="api-docs" 
            bindingMode="json"
            component="servlet"
            contextPath="/soap-to-rest/loanBroker"
            enableCORS="true" 
            port="8181">
            <!-- we want json output in pretty mode -->
            <dataFormatProperty key="prettyPrint" value="true"/>
            <!-- setup swagger api descriptions -->
            <apiProperty key="base.path" value="rest"/>
            <apiProperty key="api.version" value="1.2.3"/>
            <apiProperty key="api.title" value="User Services"/>
            <apiProperty key="api.description" value="Camel Rest Example with Swagger that provides an SOAP to REST service"/>
            <apiProperty key="api.contact.name" value="The Red Hat team"/>
        </restConfiguration>
        
        <!-- defines the rest services using the context-path /user -->
        <rest consumes="application/json" path="/bank" produces="text/plain">
            <description>Loan Broker Service</description>
            <get
                outType="org.apache.camel.loanbroker.webservice.version.bank.BankQuote" uri="/{bankId}/ssn/{ssn}/amount/{amount}/loanDuration/{loanDuration}/">
                <description>Get a quote from a given Bank</description>
                <to uri="direct:quote"/>
            </get>
            <get
                outType="org.apache.camel.loanbroker.webservice.version.bank.BankQuote" uri="/best/ssn/{ssn}/amount/{amount}/loanDuration/{loanDuration}/">
                <description>Collect responses from each bank and return the best quote</description>
                <to uri="direct:loanBroker"/>
            </get>
        </rest>
        <route id="quoteRoute">
            <from id="quoteRoute" uri="direct:quote"/>
            <log id="bankId" message="${header.bankId}"/>
            <recipientList id="_recipientList1">
                <simple>direct:${header.bankId}</simple>
            </recipientList>
            <marshal ref="toJson"/>
        </route>
        <route id="Bank1Route">
            <from id="Bank1Route" uri="direct:bank1"/>
            <process ref="requestMapper"/>
            <to uri="cxf:bean:bank1WS"/>
            <process ref="responseMapper"/>
        </route>
        <route id="Bank2Route">
            <from id="Bank2Route" uri="direct:bank2"/>
            <process ref="requestMapper"/>
            <to uri="cxf:bean:bank2WS"/>
            <process ref="responseMapper"/>
        </route>
        <route id="Bank3Route">
            <from id="Bank3Route" uri="direct:bank3"/>
            <process ref="requestMapper"/>
            <to uri="cxf:bean:bank3WS"/>
            <process ref="responseMapper"/>
        </route>
        <route id="loanBrokerRoute">
            <from id="loanBrokerRoute" uri="direct:loanBroker"/>
            <process ref="requestMapper"/>
            <log id="_log1" message="Calling the two banks with request: ${body}"/>
            <multicast id="_multicast1" parallelProcessing="true" strategyRef="bankResponse">
                <to uri="cxf:bean:bank1WS"/>
                <to uri="cxf:bean:bank2WS"/>
                <to uri="cxf:bean:bank3WS"/>
            </multicast>
            <log message="The best rate is : ${body}"/>
            <marshal ref="toJson"/>
        </route>
    </camelContext>
</blueprint>
